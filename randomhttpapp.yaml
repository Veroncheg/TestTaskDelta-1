apiVersion: v1
data:
  randomhttp.py: |
    from http.server import HTTPServer, BaseHTTPRequestHandler
    import random
    from io import BytesIO

    class SimpleHTTPRequestHandler(BaseHTTPRequestHandler):

        def do_GET(self):
            response_codes = [200,404,500]
            response_code = response_codes[random.randint(0,2)]
            self.send_response(response_code)
            self.end_headers()
            response = BytesIO()
            if response_code == 200:
                response.write(b'200 Oki')
            elif response_code == 404:
                response.write(b'404 Cannot found')
            elif response_code == 500:
                response.write(b'500 Something went wrong')
            self.wfile.write(response.getvalue())

    httpd = HTTPServer(('', 8080), SimpleHTTPRequestHandler)
    httpd.serve_forever()
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: randomhttp.py
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: randomhttp-deployment
  labels:
    app: randomhttp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: randomhttp
  template:
    metadata:
      labels:
        app: randomhttp
    spec:
      containers:
        - name: python
          image: python:3
          command: ["/usr/local/bin/python", "/usr/src/randomhttp.py"]
          ports:
            - name: web
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: randomhttp-volume
            mountPath: /usr/src/
      volumes:
        - name: randomhttp-volume
          configMap:
            name: randomhttp.py    
---
apiVersion: v1
kind: Service
metadata:
  name: randomhttp-service
spec:
  selector:
    app: randomhttp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: randomhttp-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: mystack.local
    http:
      paths:
      - path: /randomhttp
        pathType: Prefix
        backend:
          service:
            name: randomhttp-service
            port:
              number: 80
